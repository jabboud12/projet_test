- id: group_962c97
- Makefile:          5 # max 5, 
- bit.h: # NE PAS REMPLIR CETTE LIGNE
      typedef rot_dir_t:                  1 # max 1, 
- bit.c: # NE PAS REMPLIR CETTE LIGNE
  - lsb4():                       1 # max 1, 
  - msb4():                       1 # max 1, 
  - lsb8():                       1 # max 1, 
  - msb8():                       1 # max 1, 
  - merge4():                     1 # max 1, 
  - merge8():                     1 # max 1, 
  - bit_get():                    1 # max 1, 
  - bit_set():                  0.5 # max 1, -0.5 missing NULL check
  - bit_unset():                  1 # max 1, -0 missing NULL check
  - bit_edit():                   2 # max 2, -0 missing NULL check
  - bit_rotate():                 4 # max 5, -1 missing NULL check
- alu.h: # NE PAS REMPLIR CETTE LIGNE
      alu_output_t_t:                 3 # max 3, 
- alu.c: # NE PAS REMPLIR CETTE LIGNE
  - get_flag():                       6 # max 6, 
  - set_flag():                       5 # max 6, -1 missing NULL check
  - alu_add8(): # NE PAS REMPLIR CETTE LIGNE
      vérification d'usage:        1 # max 1, 
      modularisation:              0 # max 5, -5 define a function set_flags_value that assigns the value and conditionally sets the flag to avoid code duplication across all alu functions with regards to set the result and the flags
      addition:                    1 # max 1, 
      calcul des flags:            3 # max 3, 
      partie set_flags:            3 # max 3, 
  - alu_sub8(): # NE PAS REMPLIR CETTE LIGNE
      soustraction:                1 # max 1, 
      calcul des flags:            3 # max 3, 
  - alu_add16_low(): # NE PAS REMPLIR CETTE LIGNE
      addition:                    5 # max 5, 
      calcul des flags:            1 # max 1, 
  - alu_add16_high(): # NE PAS REMPLIR CETTE LIGNE
      addition:                  2.5 # max 2.5, 
      calcul des flags:          0.5 # max 0.5, 
  - alu_shift():                 6 # max 6, 
  - alu_shiftR_A():              5 # max 5, 
  - alu_rotate():                5 # max 5, 
  - alu_carry_rotate():        2.5 # max 2.5, 
- bus.h: # NE PAS REMPLIR CETTE LIGNE
      bus_t:                        3 # max 3, 
- bus.c: # NE PAS REMPLIR CETTE LIGNE
  - bus_plug(): # NE PAS REMPLIR CETTE LIGNE
      vérification d'usage:            0 # max 1, -1 missing NULL check on bus
      vérification de tout le bus:   2.5 # max 2.5, 
      modularisation:                2.5 # max 2.5, 
  - bus_forced_plug(): # NE PAS REMPLIR CETTE LIGNE
      vérifications d'usage:           1 # max 1, 
      corps:                         2.5 # max 2.5, 
      modularisation:                2.5 # max 2.5, 
  - bus_remap(): # NE PAS REMPLIR CETTE LIGNE
      vérifications d'usage:           1 # max 2.5, +1 NULL check on c
      vérification du range:           2 # max 2, 
      corps (boucle):                2.5 # max 2.5, 
  - bus_unplug():                2.75 # max 3.5, -0.75 missing NULL check on bus
  - bus_read():                   3.5 # max 3.5, -0 missing NULL check on bus
  - bus_write():                  3.5 # max 3.5, -0 missing NULL check on bus
  - bus_read16():                   4 # max 6, -1 missing NULL check on bus, -1 missing handling of special address 0xffff
  - bus_write16():                  6 # max 6, -0 missing NULL check on bus
- component.h: # NE PAS REMPLIR CETTE LIGNE
      component_t:                         5 # max 5, 
- component.c: # NE PAS REMPLIR CETTE LIGNE
  - component_create():             4 # max 6, -1 missing returning error on calloc failure, -1 missing free of mem on mem_create failure
  - component_shared():             3 # max 3.5, -0.5 missing check on sharing non existing memory, i.e. mem and mem->memory are NULL
  - component_free():               5 # max 5, 
- memory.h: # NE PAS REMPLIR CETTE LIGNE
      addr_t:       1 # max 1, 
      data_t:       1 # max 1, 
      memory_t:     4 # max 4, -0 you can remove the allocated field
- memory.c: # NE PAS REMPLIR CETTE LIGNE
  - memory_create():             6 # max 6, 
  - memory_free():             2.5 # max 2.5, 
- gameboy.h: # NE PAS REMPLIR CETTE LIGNE
      gameboy_t:                         4 # max 5, -1 missing field of actual number of components
- gameboy.c: # NE PAS REMPLIR CETTE LIGNE
  - gameboy_create(): # NE PAS REMPLIR CETTE LIGNE
      vérification d'usage:       0.5 # max 0.5,
      init de base:                 2 # max 2, 
      plug work-ram:                5 # max 5, 
      plug echo-ram:                2 # max 2.5, -0.5 you should not create a component for the echo ram, but use instead a temporary local one
  - gameboy_free():               1 # max 5, -1 missing unplugging of echo ram
- cpu.h: # NE PAS REMPLIR CETTE LIGNE
      typedef:          1 # max 1, 
      une reg-pair:     5 # max 5, 
      les autres:       3 # max 3, 
      bus (pointeur):   2 # max 2, 
      autres champs:    4 # max 4, 
- cpu.c: # NE PAS REMPLIR CETTE LIGNE
  - cpu_init():                       6 # max 6, 
  - cpu_plug():                       2 # max 2, 
  - cpu_free():                       2 # max 2, 
  - cpu_cycle():                      3 # max 3, 
- cpu-storage.c: # NE PAS REMPLIR CETTE LIGNE
  - cpu_read_at_idx():                4 # max 6, -2 missing NULL checks
  - cpu_read16_at_idx():              3 # max 3, 
  - cpu_write_at_idx():             3.5 # max 3.5, -0 missing NULL check on bus
  - cpu_write16_at_idx():           1.5 # max 1.5, 
  - cpu_SP_push():                    6 # max 6, 
  - cpu_SP_pop():                     6 # max 6, 
- cpu-register.c: # NE PAS REMPLIR CETTE LIGNE
  - cpu_reg_get():                     2.5 # max 2.5, 
  - cpu_reg_pair_get():                  2 # max 2, 
  - cpu_reg_set():                     2.5 # max 2.5, 
  - cpu_reg_pair_set():                  5 # max 5, 
- style:       1 # max 2, min -2, (normal = 0), 
- bonus/malus: 0 # max 5, min -5, (normal = 0), 
